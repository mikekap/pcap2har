name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v1
      with:
        version: latest
    
    - name: Install Wireshark (tshark) - Nightly
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        # Add Wireshark development PPA for latest builds
        sudo add-apt-repository -y ppa:wireshark-dev/stable
        # Also add the development repository for bleeding edge features
        echo "deb http://ppa.launchpad.net/wireshark-dev/stable/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/wireshark-dev.list
        sudo apt-get update
        # Install the latest development version
        sudo apt-get install -y wireshark-common tshark
        # Set up permissions for non-root usage
        sudo groupadd -f wireshark
        sudo usermod -a -G wireshark $USER
        # Configure wireshark for non-root usage
        sudo dpkg-reconfigure -f noninteractive wireshark-common
        echo "wireshark-common wireshark-common/install-setuid boolean true" | sudo debconf-set-selections
        sudo dpkg-reconfigure -f noninteractive wireshark-common
    
    - name: Install dependencies
      run: uv sync --extra dev
    
    - name: Verify tshark installation
      run: tshark --version
    
    - name: Run tests
      run: uv run pytest tests/ -v
    
    - name: Build package
      run: uv build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI
      run: uv publish
      env:
        UV_PUBLISH_TOKEN: ${{ secrets.PYPI_API_TOKEN }} 